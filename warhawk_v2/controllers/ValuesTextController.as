import mvc.AbstractController;import util.Observable;import display.DispatchMovie3;import warhawk_v2.LeaderboardModel;/***************************************************************************\*																			**  Controller for Text Display of values in Warhawk Widget Version 2		**																			**  Peter Hastie - 27th February 2009										**																			**  AS2.0																	**																			**  - Listens for the click events on the text boxes							**  - Changes the view to single state for the appropriate player			*\***************************************************************************/class warhawk_v2.controllers.ValuesTextController extends AbstractController{			public var name:String;		/***************\	* Controller	*	\***************/	public function ValuesTextController(model:Observable){		super(model);		trace('ValuesTextController: Constructor');		name = 'ValuesTextController';	}	/***********************************************\	* Public methods								*	*												*	* Note that anything calling specific methods 	*	*  in the model will have to cast it correctly.	*	*												*	\***********************************************/	public function click(e:Object):Void{		trace('ValuesTextController: click(): event from ' + e.target._name + ' of type ' + e.type);		switch (e.type){			case DispatchMovie3.ROLL_OVER_EVENT	:	textToYellow(e.target); break;			case DispatchMovie3.ROLL_OUT_EVENT	:	textToWhite(e.target); break;			case DispatchMovie3.CLICK_EVENT		:	changeState(e.target); break;		}	}			/*******************\	* Private methods	*	\*******************/	private function textToYellow(clip:MovieClip):Void{		trace('ValuesTextController: textToYellow(): setting for ' + clip._name);		clip.player_txt.textColor = 0xFFFF00;	}		private function textToWhite(clip:MovieClip):Void{		trace('ValuesTextController: textToWhite(): setting for ' + clip._name);		clip.player_txt.textColor = 0xFFFFFF;	}		private function changeState(clip:MovieClip):Void{		// Find out which player was clicked		var boxClicked:Number = Number(clip._name);		trace('ValuesTextController: changeState(): clicked on box number ' + boxClicked);		// Change the state in the model - it will tell all listeners what to do.		LeaderboardModel(getModel()).toggleState();		LeaderboardModel(getModel()).setCurrentSinglePlayer(boxClicked);	}}