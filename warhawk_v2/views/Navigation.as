import mvc.Controller;import util.Observable;import warhawk_v2.controllers.NavigationController;import warhawk_v2.views.AbstractWarhawkView;import display.DispatchButton;/***************************************************************************\*																			**  The Lower Navigation Bar view for Warhawk Widget Version 2				**																			**  Peter Hastie - 23rd February 2009										**																			**  AS2.0																	**																			**  - Draws the left, right and menu buttons									**  - Sends click events to controller when these buttons are clicked		**																			*\***************************************************************************/class warhawk_v2.views.Navigation extends AbstractWarhawkView{		private var navContainer:MovieClip;				// Clip that holds all the buttons	private var containerDepth:Number;				// Depth in container		private var leftControl:DispatchButton;			// Clip for left click	private var rightControl:DispatchButton;		// Clip for right click	private var menuControl:DispatchButton;			// Clip for menu click			/***************\	* Constructor	*	\***************/	public function Navigation(m:Observable, c:Controller, target:MovieClip, depth:Number){				// Set up model and abstract using inherited methods		super(m,c);		trace('Navigation: Constructor');				// Name this view		viewName = 'Navigation View';				drawAssets(target,depth);	}				/*******************\	* Public functions	*	\*******************/	public function update(o:Observable, infoObj:Object):Void{		trace('Navigation: update():');		// When modes and states change, may have to hide some controls	}			// Define our own default controller for this, don't want null	public function defaultController (model:Observable):Controller{		trace('Navigation: defaultController(): returning a NavigationController');		return new NavigationController(model);	}		/*******************\	* Private functions	*	\*******************/	private function drawAssets(target:MovieClip, depth:Number){		trace('Navigation: drawAssets()');		// Put the container on the stage		navContainer = target.attachMovie("LowerNavBar","lower_bar_mc",depth);		containerDepth = 1;		// Fill that container		leftControl = DispatchButton(navContainer.attachMovie("LeftNavButton","left_button_mc",containerDepth++));		rightControl = DispatchButton(navContainer.attachMovie("RightNavButton","right_button_mc",containerDepth++));		menuControl = DispatchButton(navContainer.attachMovie("MenuButton","menu_button_mc",containerDepth++));		// Position everything		navContainer._x = 2;		navContainer._y = 103;		rightControl._x = 136.1;		menuControl._x = 71.1;		menuControl._y = 307.9;		// Register click events		leftControl.addListener("click",getController());		rightControl.addListener("click",getController());		menuControl.addListener("click",getController());	}}		